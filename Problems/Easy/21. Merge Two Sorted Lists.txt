/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        
        //traverse both lists
        //create head node, set next node to smaller node. 
        ListNode temp_Node = new ListNode(0);
        ListNode current_Node = temp_Node;

        while(list1 != null && list2 != null){
            if(list1.val < list2.val){
                current_Node.next = list1;
                list1=list1.next;
            }
            else{
                current_Node.next=list2;
                list2=list2.next;
            }
            current_Node=current_Node.next;
        }
        if(list1 !=null){
            current_Node.next=list1;
            list1=list1.next;
        }
        if(list2 != null){
            current_Node.next=list2;
            list2=list2.next;
        }
        return temp_Node.next;
    }
    
}